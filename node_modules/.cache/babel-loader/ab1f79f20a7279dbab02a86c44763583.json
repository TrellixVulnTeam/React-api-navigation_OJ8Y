{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/Reactjs&Native/Cours-React/src/components/Countries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortedData, setSortedData] = useState([]); // const [playOne, setPlayOne] = useState(true);\n\n  const [rangeValue, setRangeValue] = useState(\"40\");\n  const [selectedRadio, setSelectedRadio] = useState(\"\");\n  const radios = [\"Africa\", \"America\", \"Europe\", \"Asia\", \"Oceania\"];\n  useEffect(() => {\n    // if (playOne) {\n    axios.get(\"http://restcountries.eu/rest/v2/all?fields=name;population;region;capital;flag\").then(res => {\n      setData(res.data); // setPlayOne(false);\n    }); // }\n    // const sortedcountry = () => {\n    //   const countryObj = Object.keys(data).map((i) => data[i]);\n    //   const sortedArray = countryObj.sort((a, b) => {\n    //     return b.population - a.population;\n    //   });\n    //   sortedArray.length = rangeValue;\n    //   setSortedData(sortedArray);\n    // };\n    // sortedcountry();\n    // },[data, playOne, rangeValue]);\n  }, []);\n\n  const handleRangeValue = e => {\n    setRangeValue(e.target.value);\n  };\n\n  const handleSelectedRadio = e => {\n    setSelectedRadio(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countries\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"250\",\n        value: rangeValue,\n        onChange: handleRangeValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: radios.map(r => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: r,\n            id: r,\n            checked: r === selectedRadio,\n            onChange: handleSelectedRadio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: r,\n            children: r\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, r, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cancel\",\n      children: selectedRadio && /*#__PURE__*/_jsxDEV(\"h5\", {\n        onClick: () => {\n          setSelectedRadio(\"\");\n        },\n        children: \"Annuler la recherche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"countries-list\",\n      children: sortedData.filter(country => country.region.includes(selectedRadio)).sort((a, b) => b.population - a.population).filter((country, index) => index < rangeValue).map(country => /*#__PURE__*/_jsxDEV(Card, {\n        countrie: country\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Countries, \"n5Mj8WN8dloLW3PIuQIgz5NtwMk=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["/opt/lampp/htdocs/Reactjs&Native/Cours-React/src/components/Countries.js"],"names":["React","useState","useEffect","axios","Card","Countries","data","setData","sortedData","setSortedData","rangeValue","setRangeValue","selectedRadio","setSelectedRadio","radios","get","then","res","handleRangeValue","e","target","value","handleSelectedRadio","map","r","filter","country","region","includes","sort","a","b","population","index","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\n\nconst Countries = () => {\n  const [data, setData] = useState([]);\n  const [sortedData, setSortedData] = useState([]);\n  // const [playOne, setPlayOne] = useState(true);\n  const [rangeValue, setRangeValue] = useState(\"40\");\n  const [selectedRadio, setSelectedRadio] = useState(\"\");\n  const radios = [\"Africa\", \"America\", \"Europe\", \"Asia\", \"Oceania\"];\n\n  useEffect(() => {\n    // if (playOne) {\n    axios\n      .get(\n        \"http://restcountries.eu/rest/v2/all?fields=name;population;region;capital;flag\"\n      )\n      .then((res) => {\n        setData(res.data);\n        // setPlayOne(false);\n      });\n    // }\n    // const sortedcountry = () => {\n    //   const countryObj = Object.keys(data).map((i) => data[i]);\n    //   const sortedArray = countryObj.sort((a, b) => {\n    //     return b.population - a.population;\n    //   });\n    //   sortedArray.length = rangeValue;\n    //   setSortedData(sortedArray);\n    // };\n    // sortedcountry();\n    // },[data, playOne, rangeValue]);\n  }, []);\n\n  const handleRangeValue = (e) => {\n    setRangeValue(e.target.value);\n  };\n\n  const handleSelectedRadio = (e) => {\n    setSelectedRadio(e.target.value);\n  };\n\n  return (\n    <div className=\"countries\">\n      {/* ****************** Navbar with input range and button radio********************* */}\n\n      <div className=\"sort-container\">\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"250\"\n          value={rangeValue}\n          onChange={handleRangeValue}\n        />\n        <ul>\n          {radios.map((r) => (\n            <li key={r}>\n              <input\n                type=\"radio\"\n                value={r}\n                id={r}\n                checked={r === selectedRadio}\n                onChange={handleSelectedRadio}\n              />\n              <label htmlFor={r}>{r}</label>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* ****************** Button Cancel ********************* */}\n\n      <div className=\"cancel\">\n        {selectedRadio && (\n          <h5\n            onClick={() => {\n              setSelectedRadio(\"\");\n            }}\n          >\n            Annuler la recherche\n          </h5>\n        )}\n      </div>\n\n      {/* ****************** List Countries********************* */}\n      <ul className=\"countries-list\">\n        {sortedData\n          .filter((country) => country.region.includes(selectedRadio))\n          .sort((a, b) => b.population - a.population)\n          .filter((country, index) => index < rangeValue)\n          .map((country) => (\n            <Card countrie={country} key={country.name} />\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Countries;\n"]},"metadata":{},"sourceType":"module"}